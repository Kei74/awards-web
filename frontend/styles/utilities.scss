// Import Bulma's functions so we can use findColorInvert. We CANNOT load
// `utilities/all` at this stage because that includes variables, and we have to
// set our custom variables BEFORE importing Bulma's. I love this language.
@use "~bulma/sass/utilities/functions" as *;

// Override fonts
@import url('https://fonts.googleapis.com/css?family=Open+Sans&display=swap');
$family-sans-serif: "Open Sans", "Helvetica", "Arial", sans-serif;
$family-monospace: "Source Code Pro", "Menlo", "Consolas", monospace;

// Override default colors
$dark: #1B1E25;

// Define more colors
$llperiwinkle: #7EAEFF;
$llperiwinkle-invert: findColorInvert($llperiwinkle);
$lperiwinkle: #6B9CE8;
$lperiwinkle-invert: findColorInvert($lperiwinkle);
$periwinkle: #5796FF;
$periwinkle-invert: findColorInvert($periwinkle);
$dperiwinkle: rgb(45, 56, 83);
$dperiwinkle-invert: findColorInvert($dperiwinkle);
$orangered: #EA6850;
$orangered-invert: findColorInvert($orangered);
$gold: #E7A924;
$gold-invert: findColorInvert($gold);
$silver: #D9E3ED;
$silver-invert: findColorInvert($silver);
$platinum: #00D1B2;
$platinum-invert: findColorInvert($platinum);

// Bulma allows you to define a `$custom-colors` and will automatically merge
// from it into its own color map. This means that helpers for text and
// background can be used with these colors.
$custom-colors: (
    "llperiwinkle": ($llperiwinkle, $llperiwinkle-invert),
    "lperiwinkle": ($lperiwinkle, $lperiwinkle-invert),
    "periwinkle": ($periwinkle, $periwinkle-invert),
    "dperiwinkle": ($dperiwinkle, $dperiwinkle-invert),
    "orangered": ($orangered, $orangered-invert),
    "gold": ($gold, $gold-invert),
    "silver": ($silver, $silver-invert),
    "platinum": ($platinum, $platinum-invert),
);

// Now that we have all our customizations defined, we can import the rest of
// the utilities including Bulma's variables. (This technically re-imports the
// functions but they get compiled away and I'm lazy.)

@import "~bulma/sass/utilities/_all.sass";

$spaceamounts: (0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 75, 100); // Adjust this to include the pixel amounts you need.
$sides: (top, bottom, left, right); // Leave this variable alone

@each $space in $spaceamounts {
  @each $side in $sides {
    .m#{str-slice($side, 0, 1)}-#{$space} {
      margin-#{$side}: #{$space}px !important;
    }

    .p#{str-slice($side, 0, 1)}-#{$space} {
      padding-#{$side}: #{$space}px !important;
    }
  }
}
